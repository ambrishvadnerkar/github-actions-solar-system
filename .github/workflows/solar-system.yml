name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: superuser 
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: 
          image: node:20
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        # - name: Setup NodeJS Version
        #   uses: actions/setup-node@v4
        #   with:
        #     node-version: 20

        - name: Cache NPM dependencies
          id: cache-primes
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
          
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
      
    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache NPM dependencies
          id: cache-primes
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'
          
        - name: Install Dependencies
          run: npm install
    
        - name: code coverage
          run:  npm test -- --coverage 
          
    docker:
      runs-on: ubuntu-latest
      permissions: 
        packages: write
      needs:
        - code-coverage
        - unit-testing
      steps:
        - name: checkout code
          uses: actions/checkout@v4
        - name: Set lowercase repository owner
          run: echo "REPO_OWNER_LC=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_ENV
        - name: Repo login
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: '${{ github.repository_owner }}'
            password: '${{ secrets.GITHUB_TOKEN }}'

        - uses: docker/build-push-action@v4
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ env.REPO_OWNER_LC }}/solar-system:${{ github.sha }}'
    dev-deploy:
      needs: docker
      runs-on: ubuntu-latest
      environment: 
        name: development

      steps:
        - name: checkout code
          uses: actions/checkout@v4
        - name: Install Kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: 'v1.26.0'
        - name: Set Context
          uses: azure/k8s-set-context@v4
          with:
            method: kubeconfig
            kubeconfig: ${{ secrets.KUBECONFIG }}
        - name: Check Kubectl version
          run: kubectl version --short -o yaml
      